//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMART8
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CMART8Entities : DbContext
    {
        public CMART8Entities()
            : base("name=CMART8Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CTHOADON> CTHOADONs { get; set; }
        public DbSet<CTPHIEUDEXUAT> CTPHIEUDEXUATs { get; set; }
        public DbSet<CTPHIEUNHAPHANGCHINHANH> CTPHIEUNHAPHANGCHINHANHs { get; set; }
        public DbSet<CTPHIEUNHAPHANGTRUSO> CTPHIEUNHAPHANGTRUSOes { get; set; }
        public DbSet<HOADON> HOADONs { get; set; }
        public DbSet<KHUYENMAI> KHUYENMAIs { get; set; }
        public DbSet<LICHSUGIA> LICHSUGIAs { get; set; }
        public DbSet<LOAISANPHAM> LOAISANPHAMs { get; set; }
        public DbSet<NHACUNGCAP> NHACUNGCAPs { get; set; }
        public DbSet<PHIEUDEXUAT> PHIEUDEXUATs { get; set; }
        public DbSet<PHIEUNHAPHANGCHINHANH> PHIEUNHAPHANGCHINHANHs { get; set; }
        public DbSet<PHIEUNHAPHANGTRUSO> PHIEUNHAPHANGTRUSOes { get; set; }
        public DbSet<SANPHAM> SANPHAMs { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<TAIKHOAN> TAIKHOANs { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_CHITIETHOADON_Result> SP_CHITIETHOADON(string sOHD)
        {
            var sOHDParameter = sOHD != null ?
                new ObjectParameter("SOHD", sOHD) :
                new ObjectParameter("SOHD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHITIETHOADON_Result>("SP_CHITIETHOADON", sOHDParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_HOADON_AUTO(ObjectParameter sOHOADON)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOADON_AUTO", sOHOADON);
        }
    
        public virtual int SP_HOADON_INSERT(Nullable<double> tONGTIEN, Nullable<double> tIENKHACHDUA, Nullable<double> tIENKHATRA, Nullable<int> tONGSL, string pOS, string mATK)
        {
            var tONGTIENParameter = tONGTIEN.HasValue ?
                new ObjectParameter("TONGTIEN", tONGTIEN) :
                new ObjectParameter("TONGTIEN", typeof(double));
    
            var tIENKHACHDUAParameter = tIENKHACHDUA.HasValue ?
                new ObjectParameter("TIENKHACHDUA", tIENKHACHDUA) :
                new ObjectParameter("TIENKHACHDUA", typeof(double));
    
            var tIENKHATRAParameter = tIENKHATRA.HasValue ?
                new ObjectParameter("TIENKHATRA", tIENKHATRA) :
                new ObjectParameter("TIENKHATRA", typeof(double));
    
            var tONGSLParameter = tONGSL.HasValue ?
                new ObjectParameter("TONGSL", tONGSL) :
                new ObjectParameter("TONGSL", typeof(int));
    
            var pOSParameter = pOS != null ?
                new ObjectParameter("POS", pOS) :
                new ObjectParameter("POS", typeof(string));
    
            var mATKParameter = mATK != null ?
                new ObjectParameter("MATK", mATK) :
                new ObjectParameter("MATK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOADON_INSERT", tONGTIENParameter, tIENKHACHDUAParameter, tIENKHATRAParameter, tONGSLParameter, pOSParameter, mATKParameter);
        }
    
        public virtual int SP_PHIEUNHAPHANGCHINHANH_AUTO(ObjectParameter sOPHIEU)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PHIEUNHAPHANGCHINHANH_AUTO", sOPHIEU);
        }
    
        public virtual int SP_PHIEUNHAPHANGCHINHANH_INSERT(string sOPHIEUNHTS, Nullable<double> tONGTIEN, string cHINHANH, string mATK)
        {
            var sOPHIEUNHTSParameter = sOPHIEUNHTS != null ?
                new ObjectParameter("SOPHIEUNHTS", sOPHIEUNHTS) :
                new ObjectParameter("SOPHIEUNHTS", typeof(string));
    
            var tONGTIENParameter = tONGTIEN.HasValue ?
                new ObjectParameter("TONGTIEN", tONGTIEN) :
                new ObjectParameter("TONGTIEN", typeof(double));
    
            var cHINHANHParameter = cHINHANH != null ?
                new ObjectParameter("CHINHANH", cHINHANH) :
                new ObjectParameter("CHINHANH", typeof(string));
    
            var mATKParameter = mATK != null ?
                new ObjectParameter("MATK", mATK) :
                new ObjectParameter("MATK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PHIEUNHAPHANGCHINHANH_INSERT", sOPHIEUNHTSParameter, tONGTIENParameter, cHINHANHParameter, mATKParameter);
        }
    
        public virtual int SP_PHIEUNHAPHANGTRUSO_AUTO(ObjectParameter sOPHIEU)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PHIEUNHAPHANGTRUSO_AUTO", sOPHIEU);
        }
    
        public virtual int SP_PHIEUNHAPHANGTRUSO_INSERT(string sOPHIEUDEXUAT, Nullable<double> tONGTIEN, string mATK)
        {
            var sOPHIEUDEXUATParameter = sOPHIEUDEXUAT != null ?
                new ObjectParameter("SOPHIEUDEXUAT", sOPHIEUDEXUAT) :
                new ObjectParameter("SOPHIEUDEXUAT", typeof(string));
    
            var tONGTIENParameter = tONGTIEN.HasValue ?
                new ObjectParameter("TONGTIEN", tONGTIEN) :
                new ObjectParameter("TONGTIEN", typeof(double));
    
            var mATKParameter = mATK != null ?
                new ObjectParameter("MATK", mATK) :
                new ObjectParameter("MATK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PHIEUNHAPHANGTRUSO_INSERT", sOPHIEUDEXUATParameter, tONGTIENParameter, mATKParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_NAM_Result> SP_THONGKEDOANHTHU_NAM(Nullable<int> nAM)
        {
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_NAM_Result>("SP_THONGKEDOANHTHU_NAM", nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_NGAY_Result> SP_THONGKEDOANHTHU_NGAY(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_NGAY_Result>("SP_THONGKEDOANHTHU_NGAY", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_TG_Result> SP_THONGKEDOANHTHU_TG(Nullable<System.DateTime> nGAYBD, Nullable<System.DateTime> nGAYKT)
        {
            var nGAYBDParameter = nGAYBD.HasValue ?
                new ObjectParameter("NGAYBD", nGAYBD) :
                new ObjectParameter("NGAYBD", typeof(System.DateTime));
    
            var nGAYKTParameter = nGAYKT.HasValue ?
                new ObjectParameter("NGAYKT", nGAYKT) :
                new ObjectParameter("NGAYKT", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_TG_Result>("SP_THONGKEDOANHTHU_TG", nGAYBDParameter, nGAYKTParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_THANG_Result> SP_THONGKEDOANHTHU_THANG(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_THANG_Result>("SP_THONGKEDOANHTHU_THANG", tHANGParameter, nAMParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_CHITIETPHIEUNHAPCHINHANH_Result> SP_CHITIETPHIEUNHAPCHINHANH(string sOPHIEU)
        {
            var sOPHIEUParameter = sOPHIEU != null ?
                new ObjectParameter("SOPHIEU", sOPHIEU) :
                new ObjectParameter("SOPHIEU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHITIETPHIEUNHAPCHINHANH_Result>("SP_CHITIETPHIEUNHAPCHINHANH", sOPHIEUParameter);
        }
    
        public virtual ObjectResult<SP_CHITIETPHIEUNHAPTRUSO_Result> SP_CHITIETPHIEUNHAPTRUSO(string sOPHIEU)
        {
            var sOPHIEUParameter = sOPHIEU != null ?
                new ObjectParameter("SOPHIEU", sOPHIEU) :
                new ObjectParameter("SOPHIEU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHITIETPHIEUNHAPTRUSO_Result>("SP_CHITIETPHIEUNHAPTRUSO", sOPHIEUParameter);
        }
    
        public virtual ObjectResult<SP_CHITIETPHIEUDEXUAT_Result> SP_CHITIETPHIEUDEXUAT(string sOPHIEU)
        {
            var sOPHIEUParameter = sOPHIEU != null ?
                new ObjectParameter("SOPHIEU", sOPHIEU) :
                new ObjectParameter("SOPHIEU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHITIETPHIEUDEXUAT_Result>("SP_CHITIETPHIEUDEXUAT", sOPHIEUParameter);
        }
    
        public virtual int SP_THONGKEDOANHTHU(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_THONGKEDOANHTHU", tHANGParameter, nAMParameter);
        }
    }
}
